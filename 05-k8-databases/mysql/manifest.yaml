apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: roboshop
  labels:
    component: mysql-headless-svc
    project: roboshop-headless-svc
    tier: database-headless-svc
spec:
  clusterIP: None
  selector:
    component: mysql
    project: roboshop
    tier: database
  ports: 
    - protocol: TCP
      port: 3306 # service port
      targetPort: 3306 # container port


---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: roboshop
  labels:
    component: mysql-svc
    project: roboshop-svc
    tier: database-svc
spec:
  selector:
    component: mysql
    project: roboshop
    tier: database
  ports: 
    - protocol: TCP
      port: 3306 # service port
      targetPort: 3306 # container port


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: roboshop
  labels:
    component: mysql_top-level
    project: roboshop_top-level
    tier: database_top-level
spec:
  selector:
    matchLabels:
      component: mysql
      project: roboshop
      tier: database # has to match .spec.template.metadata.labels
  serviceName: "mysql-headless" # this should be service name
  replicas: 2 # by default is 1
  template:
    metadata:
      labels:
        component: mysql  # has to match .spec.selector.matchLabels
        project: roboshop
        tier: database 
    spec:
      containers:
      - name: mysql
        image: charan466/mysql:v1
        volumeMounts:
        - name:  mysql-data
          mountPath: /var/lib/mysql
  # This is nothing but PVC, you can directly create here
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "roboshop-ebs-dynamic"
      resources:
        requests:
          storage: 3Gi

