apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-deployment
  namespace: roboshop
  # deployment labels, these belong to the deployment itself, not the Pods.
  labels:
    component: shipping
    project: roboshop_top-level
    tier: app-shipping
    # These labels identify and organize the ReplicaSet resource itself.
    # Used by users or tools to filter ReplicaSets, search, and group resources. (e.g., kubectl get all -l project=roboshop_top-level (or) kubectl get rs -l project=roboshop_top-level).
    # Not used by ReplicaSet controller to create or manage Pods.
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels: # Tells ReplicaSet which Pods to manage
      component: shipping
      project: roboshop
      tier: app-shipping
      # These labels define which Pods the ReplicaSet should watch and manage.
      # If any Pod in the cluster matches these labels, the ReplicaSet counts them toward its replica count.
      # This selector must exactly match the template labels so the RS can manage the Pods it creates.
  template:
    metadata: # Labels for the Pods it creates
      labels: 
        component: shipping
        project: roboshop
        tier: app-shipping
        # These labels are app-shippinglied to new Pods created by the ReplicaSet.
        # They should match the selector labels so the ReplicaSet can identify and manage these Pods.
        # If they donâ€™t match, the RS will never associate with the Pods it creates, causing errors or orphan Pods.
    spec:
      containers:
      - name: shipping
        image: "{{ .Values.deployment.imageURL }}:{{ .Values.deployment.imageVersion }}"
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "200m"
            memory: "512Mi"
        envFrom:
        - configMapRef:
            name: shipping-configmap