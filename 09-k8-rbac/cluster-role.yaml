### USERS ###

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: junior
rules:
- apiGroups: [""]
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["persistentvolumes"]
  verbs: ["get", "watch", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: access-to-junior
subjects:
- kind: User
  name: suresh # Name is case sensitive  ## ✅ MUST MATCH the 'username' in aws-auth
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: junior   ## ✅ must match the ClusterRole name
  apiGroup: rbac.authorization.k8s.io


###  GROUPS ###

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   # "namespace" omitted since ClusterRoles are not namespaced
#   name: junior
# rules:
# - apiGroups: [""]
#   # at the HTTP level, the name of the resource for accessing Secret
#   # objects is "secrets"
#   resources: ["persistentvolumes"]
#   verbs: ["get", "watch", "list"]

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# # This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
# kind: ClusterRoleBinding
# metadata:
#   name: access-to-junior
# subjects:
# - kind: Group  # User  
#   name: junior # Name is case sensitive  ## ✅ Must match the group name from aws-auth
#   apiGroup: rbac.authorization.k8s.io
# roleRef:
#   kind: ClusterRole
#   name: junior  ## ✅ Must match the ClusterRole name above
#   apiGroup: rbac.authorization.k8s.io